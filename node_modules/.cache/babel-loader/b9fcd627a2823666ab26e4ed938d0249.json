{"ast":null,"code":"import { axiosWithAuth } from '../utils/axiosWithAuth'; // Posting action for login and signup form\n\nexport const POSTING = 'POSTING';\nexport const FAILURE_POSTING = 'FAILURE_POSTING';\nexport const SUCCESS_POSTING_SIGNUP = 'SUCCESS_POSTING_SIGNUP';\nexport const SUCCESS_POSTING_LOGIN = 'SUCCESS_POSTING_LOGIN';\nexport const signupSave = userInput => {\n  return dispatch => {\n    dispatch({\n      type: POSTING\n    });\n    axiosWithAuth().post('/api/auth/register', userInput).then(res => {\n      window.localStorage.setItem('token', res.data.token);\n      dispatch({\n        type: SUCCESS_POSTING_SIGNUP\n      });\n    }).catch(err => {\n      dispatch({\n        type: FAILURE_POSTING\n      });\n    });\n  };\n};\nexport const loginSave = userInput => {\n  return dispatch => {\n    dispatch({\n      type: POSTING\n    });\n    axiosWithAuth().post('/api/auth/login', userInput).then(res => {\n      window.localStorage.setItem('token', res.data.token);\n      alert(`${res.data.message}, you are now being redirected to Auction Page.`);\n      dispatch({\n        type: SUCCESS_POSTING_LOGIN,\n        payload: {\n          user_id: res.data.id,\n          user_type: res.data.type\n        }\n      });\n    }).catch(err => {\n      dispatch({\n        type: FAILURE_POSTING\n      });\n    });\n  };\n}; // Fetching auction for main menu\n\nexport const FETCHING = 'FETCHING';\nexport const SUCCESS_FETCHING = 'SUCCESS_FETCHING';\nexport const FAILURE_FETCHING = 'FAILURE_FETCHING';\nexport const fetchingAuction = () => {\n  return dispatch => {\n    dispatch({\n      type: FETCHING\n    });\n    axiosWithAuth().get('/api/auctions').then(res => {\n      dispatch({\n        type: SUCCESS_FETCHING,\n        payload: res.data\n      });\n    }).catch(err => {\n      dispatch({\n        type: FAILURE_FETCHING\n      });\n    });\n  };\n}; // Posting a new auction\n\nexport const POSTING_AUCTION = 'POSTING_AUCTION';\nexport const FAILURE_POSTING_AUCTION = 'FAILURE_POSTING_AUCTION';\nexport const SUCCESS_POSTING_AUCTION = 'SUCCESS_POSTING_AUCTION';\nexport const postAuction = listing => {\n  return dispatch => {\n    dispatch({\n      type: POSTING_AUCTION\n    });\n    axiosWithAuth().post('/api/auctions', listing).then(res => {\n      console.log(`posting data`, res);\n      dispatch({\n        type: SUCCESS_POSTING_AUCTION\n      });\n    }).catch(err => {\n      console.log(`posting err`, err);\n      dispatch({\n        type: FAILURE_POSTING_AUCTION\n      });\n    });\n  };\n}; // Deleting Auction\n\nexport const DELETE_AUCTION = 'DELETE_AUCTION';\nexport const FAILURE_DELETE_AUCTION = 'FAILURE_DELETE_AUCTION';\nexport const SUCCESS_DELETE_AUCTION = 'SUCCESS_DELETE_AUCTION';\nexport const deleteAuction = id => {\n  return dispatch => {\n    dispatch({\n      type: DELETE_AUCTION\n    });\n    axiosWithAuth().delete(`/api/auctions/${id}`).then(res => {\n      console.log(res);\n      dispatch({\n        type: SUCCESS_DELETE_AUCTION\n      });\n    }).catch(err => {\n      dispatch({\n        type: FAILURE_DELETE_AUCTION\n      });\n    });\n  };\n}; // Updating Auciton\n\nexport const UPDATE_AUCTION = 'UPDATE_AUCTION';\nexport const FAILURE_UPDATE_AUCTION = 'FAILURE_UPDATE_AUCTION';\nexport const SUCCESS_UPDATE_AUCTION = 'SUCCESS_UPDATE_AUCTION';\nexport const updateAuction = (id, listing) => {\n  return dispatch => {\n    dispatch({\n      type: UPDATE_AUCTION\n    });\n    axiosWithAuth().put(`/api/auctions/${id}`, listing).then(res => {\n      dispatch({\n        type: SUCCESS_UPDATE_AUCTION\n      });\n    }).catch(err => {\n      dispatch({\n        type: FAILURE_UPDATE_AUCTION\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/josues-laptop/Lambda/FE/src/actions/index.js"],"names":["axiosWithAuth","POSTING","FAILURE_POSTING","SUCCESS_POSTING_SIGNUP","SUCCESS_POSTING_LOGIN","signupSave","userInput","dispatch","type","post","then","res","window","localStorage","setItem","data","token","catch","err","loginSave","alert","message","payload","user_id","id","user_type","FETCHING","SUCCESS_FETCHING","FAILURE_FETCHING","fetchingAuction","get","POSTING_AUCTION","FAILURE_POSTING_AUCTION","SUCCESS_POSTING_AUCTION","postAuction","listing","console","log","DELETE_AUCTION","FAILURE_DELETE_AUCTION","SUCCESS_DELETE_AUCTION","deleteAuction","delete","UPDATE_AUCTION","FAILURE_UPDATE_AUCTION","SUCCESS_UPDATE_AUCTION","updateAuction","put"],"mappings":"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","sourcesContent":["import {axiosWithAuth} from '../utils/axiosWithAuth'\n\n// Posting action for login and signup form\n\nexport const POSTING = 'POSTING'\nexport const FAILURE_POSTING = 'FAILURE_POSTING'\nexport const SUCCESS_POSTING_SIGNUP = 'SUCCESS_POSTING_SIGNUP'\nexport const SUCCESS_POSTING_LOGIN = 'SUCCESS_POSTING_LOGIN'\n\nexport const signupSave = (userInput) => {\n    return(dispatch) => {\n        dispatch({type: POSTING})\n        axiosWithAuth().post('/api/auth/register', userInput)\n        .then(res => {\n            window.localStorage.setItem('token', res.data.token)\n            dispatch({type: SUCCESS_POSTING_SIGNUP})\n        })\n        .catch(err => {\n            dispatch({type: FAILURE_POSTING})\n        })\n    }\n}\n\nexport const loginSave = (userInput) => {\n    return(dispatch) => {\n        dispatch({type: POSTING,})\n        axiosWithAuth().post('/api/auth/login', userInput)\n        .then(res => {\n            window.localStorage.setItem('token', res.data.token)\n            alert(`${res.data.message}, you are now being redirected to Auction Page.`)\n            dispatch({type: SUCCESS_POSTING_LOGIN, payload: {user_id: res.data.id, user_type: res.data.type}})\n\n        })\n        .catch(err => {\n            dispatch({type: FAILURE_POSTING})\n        })\n    }\n}\n\n// Fetching auction for main menu\n\nexport const FETCHING = 'FETCHING'\nexport const SUCCESS_FETCHING = 'SUCCESS_FETCHING'\nexport const FAILURE_FETCHING = 'FAILURE_FETCHING'\n\n\nexport const fetchingAuction = () => {\n    return(dispatch) => {\n        dispatch({type: FETCHING})\n        axiosWithAuth().get('/api/auctions')\n        .then(res => {\n            dispatch({type: SUCCESS_FETCHING, payload: res.data})\n\n        })\n        .catch(err => {\n            dispatch({type: FAILURE_FETCHING})\n        })\n    }\n}\n\n// Posting a new auction\n\nexport const POSTING_AUCTION = 'POSTING_AUCTION'\nexport const FAILURE_POSTING_AUCTION = 'FAILURE_POSTING_AUCTION'\nexport const SUCCESS_POSTING_AUCTION = 'SUCCESS_POSTING_AUCTION'\n\nexport const postAuction = (listing) => {\n    return(dispatch) => {\n        dispatch({type: POSTING_AUCTION})\n        axiosWithAuth().post('/api/auctions', listing)\n        .then(res => {\n            console.log(`posting data`,res)\n            dispatch({type: SUCCESS_POSTING_AUCTION})\n\n        })\n        .catch(err => {\n            console.log(`posting err`,err)\n            dispatch({type: FAILURE_POSTING_AUCTION})\n        })\n    }\n}\n\n// Deleting Auction\n\nexport const DELETE_AUCTION = 'DELETE_AUCTION'\nexport const FAILURE_DELETE_AUCTION = 'FAILURE_DELETE_AUCTION'\nexport const SUCCESS_DELETE_AUCTION = 'SUCCESS_DELETE_AUCTION'\n\nexport const deleteAuction = (id) => {\n    return(dispatch) => {\n        dispatch({type: DELETE_AUCTION})\n        axiosWithAuth().delete(`/api/auctions/${id}`)\n        .then(res => {\n            console.log(res)\n            dispatch({type: SUCCESS_DELETE_AUCTION})\n\n        })\n        .catch(err => {\n            dispatch({type: FAILURE_DELETE_AUCTION})\n        })\n    }\n}\n\n// Updating Auciton\n\nexport const UPDATE_AUCTION = 'UPDATE_AUCTION'\nexport const FAILURE_UPDATE_AUCTION = 'FAILURE_UPDATE_AUCTION'\nexport const SUCCESS_UPDATE_AUCTION = 'SUCCESS_UPDATE_AUCTION'\n\nexport const updateAuction = (id, listing) => {\n    return(dispatch) => {\n        dispatch({type: UPDATE_AUCTION})\n        axiosWithAuth().put(`/api/auctions/${id}`, listing)\n        .then(res => {\n            dispatch({type: SUCCESS_UPDATE_AUCTION})\n\n        })\n        .catch(err => {\n            dispatch({type: FAILURE_UPDATE_AUCTION})\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}